<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile Page</title>

    <link rel="stylesheet" href="/stylesheets/dist/style.css">
    <link rel="stylesheet" href="/stylesheets/dist/components.css">
    <link rel="stylesheet" href="/stylesheets/dist/grid.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

    <style>
        .banner {
            background-size: cover;
            background-position: center center;
            background: linear-gradient(135deg, #FA4821 5.42%, #AE0F56 90.28%);
            color: #ffffff;
            position: relative;
            height: 200px;
            border-radius: .5rem;
            margin-top: 5rem;
            width: 100%;
        }
        .banner div {
            position: relative;
            padding: 3.5rem 3rem;
            display: flex;
            height: 100%;
            box-sizing: border-box;
            justify-content: space-between;
            flex-direction: column;
        }
        .banner h1 {
            font-size: 48px;
        }
        .banner h1 .material-icons {
            position: relative;
            top: 7px;
            font-size: 48px;
        }
        .banner a {
            opacity: 0.8;
            font-size: 18px;
            color: #ffffff;
            text-decoration: none;
        }
        .banner a .material-icons {
            font-size: 18px;
            position: relative;
            top: 2px;
        }

        .keystats,
        .achievements {
            width: 100%;
            margin-left: -.5rem;
        }
    </style>
</head>
<body>
    <div id="app">
        <navbar 
            avatar="<%= user.avatar %>" 
            username="<%= user.username %>" 
            tag="<%= user.tag %>"
        ></navbar>

        <div class="container">
            <div class="row hero">
                <div class="banner">
                    <div>
                        <a href="#" @click="goToProfile()"><i class="material-icons">arrow_back</i> Back to <%= user.username %>'s profile</a>
                        <h1><i class="material-icons">emoji_events</i>Achievements</h1>
                    </div>
                </div>
            </div>

            <div class="row">
                <divider icon="show_chart">Key stats</divider>
            </div>
            <div class="row keystats">
                <stat-card title="Achievements Unlocked"><b><%= achievements.length %></b></stat-card>
            </div>

            <div class="row">
                <divider icon="emoji_events">Achievements</divider>
            </div>
            <div class="row achievements">
                <achievement-card 
                    v-for="achievement in <%= JSON.stringify(achievements) %>"
                    :icon="achievement.icon"
                    :name="achievement.name"
                    :description="achievement.description"
                    wide="true"
                ></achievement-card>
            </div>
        </div>
    </div>

    <script type="module">
        import Vue from 'https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js'
        import Navbar from '/components/navbar.js'
        import Badge from '/components/badge.js'
        import Divider from '/components/divider.js'
        import StatCard from '/components/stat-card.js'
        import AchievementCard from '/components/achievement-card.js'

        Vue.component('Navbar', Navbar);
        Vue.component('Badge', Badge);
        Vue.component('Divider', Divider);
        Vue.component('StatCard', StatCard);
        Vue.component('AchievementCard', AchievementCard);

        var app = new Vue({
            el: '#app',
            methods: {
                goToProfile() {
                    location.assign(`${location.origin}/profile/<%= user.username %>/<%= user.tag %>`);
                },
                parseTime(seconds) {
                    const hours = Math.floor(seconds / 3600);
                    const minutes = Math.floor(seconds / 60) - hours * 60;

                    return [hours, minutes];
                }
            }
        });
    </script>
</body>
</html>